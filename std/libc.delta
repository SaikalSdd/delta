// stdlib.h
extern void*? malloc(uint64 size);
extern void free(void*? ptr);
extern void abort();

// stdio.h
// TODO using FILE pointer causes infinite loop, so we use void pointer
extern int printf(const char* format, ...);
extern int sprintf(char* str, const char* format, ...);
extern int getchar();
extern void*? fopen(const char* filename, const char* mode);
extern void*? fdopen(int fd, const char* mode);
extern int fgetc(void* file);
extern int fclose(void* file);
extern int fflush(void* file);
extern void exit(int status);
extern int feof(void* file);
extern int fputc(int c, void* file);
extern int remove(const char* filename);
extern int ungetc(int c, void* file);
extern void rewind(void* file);

// string.h
extern uint64 strlen(const char* string);
