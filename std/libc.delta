// stdlib.h
extern mutable void*? malloc(uint64 size);
extern void free(mutable void*? ptr);
extern void abort();

// stdio.h
// TODO using FILE pointer causes infinite loop, so we use void pointer
extern int printf(char* format, ...);
extern int sprintf(mutable char* str, char* format, ...);
extern int getchar();
extern void*? fopen(char* filename, char* mode);
extern void*? fdopen(int fd, char* mode);
extern int fgetc(void* file);
extern int fclose(void* file);
extern int fflush(void* file);
extern void exit(int status);
extern int feof(void* file);
extern int fputc(int c, void* file);
extern int remove(char* filename);
extern int ungetc(int c, void* file);
extern void rewind(void* file);

// string.h
extern uint64 strlen(char* string);
