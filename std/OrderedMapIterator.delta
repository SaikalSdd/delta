struct OrderedMapIterator<Key, Value>: Copyable, Iterator<(key: Key, value: mutable Value)*> {
    var current: AVLnode<Key, Value>*?;
    var map: OrderedMap<Key, Value>*;

    init (map: OrderedMap<Key, Value>*) {
        current = map.firstNode();
        this.map = map;
    }

    def hasValue(): bool {
        return current != null;
    }

    def value(): (key: Key, value: mutable Value)* {
        return current!.entry;
    }

    mutating def increment() {
        current = map.higherNode(current!);
    }
}
