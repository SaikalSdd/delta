struct Range<T>: Copyable {
    var start: T;
    var end: T;

    init(start: T, end: T) {
        this.start = start;
        this.end = end;
    }

    init (end: T) {
        init(0, end);
    }

    // Returns the number of elements this range contains.
    def size(): T {
        return end - start;
    }

    // Alias for size
    def length(): T {
        return size();
    }

    def start(): T {
        return start;
    }

    def end(): T {
        return end;
    }

    def iterator(): RangeIterator<T> {
        return RangeIterator(this);
    }
}
