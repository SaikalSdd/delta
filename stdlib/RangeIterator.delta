struct RangeIterator<T>: Copyable, Iterator<T> {
    var current: T;
    let end: T;

    init(range: Range<T>) {
        current = range.start();
        end = range.end();
    }

    func hasValue() -> bool {
        return current != end;
    }

    func value() -> T {
        return current;
    }

    mutating func increment() {
        current++;
    }
}
