// RUN: %delta -print-ir %s | %FileCheck %s
// RUN: %delta -print-ir %s | %FileCheck %s -check-prefix=DEINIT
// RUN: %delta -print-ir %s | %FileCheck %s -check-prefix=CHECK-S
// RUN: %delta -print-ir %s | %FileCheck %s -check-prefix=CHECK-MAIN

struct S: Copyable {
    init() {}

    // CHECK-S: define void @_ENM4main1S3fooE({}* %this)
    // CHECK-S-NEXT: %this1 = load {}, {}* %this
    // CHECK-S-NEXT: call void @_EN4main1S3barE({} %this1)
    mutating func foo() {
        bar()
    }

    // CHECK-S: define void @_EN4main1S3barE({} %this)
    func bar() { }
}

struct Foo<U> {
    // CHECK: define void @{{.*Foo.*int.*init.*}}({}* %this)
    // CHECK-NEXT: call void @{{.*Foo.*int.*baz.*}}({}* %this)
    init() {
        baz()
    }

    // DEINIT: define void @{{.*Foo.*int.*deinit.*}}({}* %this)
    // DEINIT-NEXT: call void @{{.*Foo.*int.*baz.*}}({}* %this)
    deinit() {
        baz()
    }

    // CHECK: define void @{{.*Foo.*int.*baz.*}}({}* %this)
    // CHECK-NEXT: call void @{{.*Foo.*int.*qux.*}}({}* %this)
    mutating func baz() {
        qux()
    }

    // CHECK: define void @{{.*Foo.*int.*qux.*}}({}* %this)
    func qux() { }
}

func main() {
    var s = S()
    s.foo()

    var t = Foo<int>()
    // CHECK-MAIN: call void @{{.*Foo.*int.*baz.*}}({}* %t)
    t.baz()
}
