// RUN: %delta -print-ir %s | %FileCheck %s

def f(foo: int, bar: int) -> int[2] {
    // CHECK:      %1 = add i32 %foo, %bar
    // CHECK-NEXT: %2 = insertvalue [2 x i32] undef, i32 %1, 0
    // CHECK-NEXT: %3 = sub i32 %foo, %bar
    // CHECK-NEXT: %4 = insertvalue [2 x i32] %2, i32 %3, 1
    // CHECK-NEXT: ret [2 x i32] %4
    return [foo + bar, foo - bar];
}

def g(foo: int, bar: int) -> int[2] {
    // TODO: Insert elements straight into alloca.
    // CHECK:      %c = alloca [2 x i32]
    // CHECK-NEXT: %1 = add i32 %foo, %bar
    // CHECK-NEXT: %2 = insertvalue [2 x i32] undef, i32 %1, 0
    // CHECK-NEXT: %3 = sub i32 %foo, %bar
    // CHECK-NEXT: %4 = insertvalue [2 x i32] %2, i32 %3, 1
    // CHECK-NEXT: store [2 x i32] %4, [2 x i32]* %c
    // CHECK-NEXT: %c1 = load [2 x i32], [2 x i32]* %c
    // CHECK-NEXT: ret [2 x i32] %c1
    let c = [foo + bar, foo - bar];
    return c;
}
