// RUN: %delta -print-ir %s | %FileCheck %s

interface H {
    func h() -> int;
}

struct R: Copyable {
    let i: int;

    func h() -> int {
        return i;
    }
}

struct A<T> {
    let t: T;

    init() {}

    func [](i: int) -> T {
        return t;
    }
}

struct S<E: H> {
    var a: A<A<E>>;

    init() {}

    func s() {
        // CHECK: %[[T_VALUE:[a-z0-9]+]] = call %"A<R>" @_EN4main1AI1AI1REEixE1i3int(%"A<A<R>>"* %{{[a-z0-9]+}}, i32 0)
        // CHECK-NEXT: store %"A<R>" %[[T_VALUE]], %"A<R>"* %t
        let t = a[0];

        // CHECK-NEXT: %[[TT_VALUE:[a-z0-9]+]] = call %R @_EN4main1AI1REixE1i3int(%"A<R>"* %t, i32 0)
        // CHECK-NEXT: store %R %[[TT_VALUE]], %R* %tt
        let tt = t[0];

        // CHECK: %[[INDEX:[a-z0-9]+]] = call i32 @_EN4main1R1hE(%R %tt{{[0-9]+}})
        // CHECK-NEXT: call %"A<R>" @_EN4main1AI1AI1REEixE1i3int(%"A<A<R>>"* %{{[a-z0-9]+}}, i32 %[[INDEX]])
        _ = a[tt.h()];
    }
}

func main() {
    let s = S<R>();
    s.s();
}
