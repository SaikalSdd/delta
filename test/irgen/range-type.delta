// RUN: %delta -print-ir %s | %FileCheck %s
// RUN: %delta -print-ir %s | %FileCheck %s -check-prefix=CHECK-RANGE
// RUN: check_exit_status 10 %delta run %s

// CHECK-RANGE: declare void @{{.*5Range.*3int.*4init.*}}(%"Range<int>"*, i32, i32)

// CHECK: define i32 @[[FOO:.*3foo.*]](%"Range<int>" %r)
def foo(r: Range<int>): int {
    var sum = 0;

    // CHECK: alloca %"RangeIterator<int>"
    // CHECK: call %"RangeIterator<int>" @{{.*5Range.*3int.*8iterator.*}}(%"Range<int>" %r)
    // CHECK: call i1 @{{.*13RangeIterator.*3int.*8hasValue.*}}
    // CHECK: call i32 @{{.*13RangeIterator.*3int.*5value.*}}
    // CHECK: call void @{{.*13RangeIterator.*3int.*9increment.*}}
    for (var i in r) {
        sum += i;
    }

    return sum;
}

// CHECK-LABEL: define i32 @main()
def main(): int {
    // CHECK: call void @{{.*5Range.*3int.*4init.*}}(%"Range<int>"* %{{[0-9]+}}, i32 0, i32 5)
    // CHECK-NEXT: %{{[0-9]+}} = load %"Range<int>", %"Range<int>"* %{{[0-9]+}}
    // CHECK-NEXT: call i32 @[[FOO]](%"Range<int>" %{{[0-9]+}})
    return foo(0..5);
}
