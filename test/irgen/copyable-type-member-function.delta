// RUN: %delta -print-ir %s | %FileCheck %s

struct Foo: Copyable {
    let baz: int;

    // CHECK: define void @Foo.init
    // CHECK-NEXT: %baz = getelementptr inbounds %Foo, %Foo* %this, i32 0, i32 0
    // CHECK-NEXT: store i32 42, i32* %baz
    // CHECK-NEXT: ret void
    init() { this.baz = 42; }

    // CHECK: define void @Foo.bar(%Foo %this)
    // CHECK-NEXT: ret void
    func bar() { }

    // CHECK: define i32 @Foo.qux(%Foo %this)
    // CHECK-NEXT: %baz = extractvalue %Foo %this, 0
    // CHECK-NEXT: ret i32 %baz
    func qux() -> int { return this.baz; }
}

// CHECK: define i32 @main()
// CHECK-NEXT: %foo = alloca %Foo
// CHECK-NEXT: %i = alloca i32
// CHECK-NEXT: call void @Foo.init(%Foo* %foo)
// CHECK-NEXT: %foo1 = load %Foo, %Foo* %foo
// CHECK-NEXT: call void @Foo.bar(%Foo %foo1)
// CHECK-NEXT: %foo2 = load %Foo, %Foo* %foo
// CHECK-NEXT: %1 = call i32 @Foo.qux(%Foo %foo2)
// CHECK-NEXT: store i32 %1, i32* %i
// CHECK-NEXT: ret
func main() {
    var foo = Foo();
    foo.bar();
    var i = foo.qux();
}
