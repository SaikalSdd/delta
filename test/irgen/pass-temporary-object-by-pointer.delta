// RUN: %delta -print-ir %s | %FileCheck %s

struct A: Copyable {
    let i: int;
    init() {}
}

struct B {
    let i: int;
    init() {}
}

func f(a: A*) {}
func f(b: B*) {}
func f(i: int*) {}

func main() {
    // CHECK: %a = alloca %A
    let a: A = undefined;

    // CHECK-NEXT: %b = alloca %B
    let b: B = undefined;

    // CHECK-NEXT: %1 = alloca %A
    // CHECK-NEXT: %2 = alloca %B
    // CHECK-NEXT: %3 = alloca i32

    // CHECK-NEXT: call void @A.init(%A* %1)
    // CHECK-NEXT: call void @f(%A* %1)
    f(A());

    // CHECK-NEXT: call void @B.init(%B* %2)
    // CHECK-NEXT: call void @f{{[\.0-9]+}}(%B* %2)
    f(B());

    // CHECK-NEXT: store i32 0, i32* %3
    // CHECK-NEXT: call void @f{{[\.0-9]+}}(i32* %3)
    f(0);
}
