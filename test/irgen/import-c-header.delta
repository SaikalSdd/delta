// RUN: %delta -print-ir %s | %FileCheck %s
// RUN: %delta -print-ir %s | %FileCheck %s -check-prefix=CHECK-DECL

import "stdio.h";
// CHECK-DECL-DAG: declare i32 @puts(i8*)

import "foo.h";
// CHECK-DECL-DAG: %Foo = type { i32, i8* }
// CHECK-DECL-DAG: declare i32 @getBar(%Foo*)

// CHECK-LABEL: define i32 @main()
func main() {
    // CHECK: call i32 @puts(i8*
    puts("foo bar");
    var f: Foo = undefined;
    // CHECK-NEXT: %2 = getelementptr inbounds %Foo, %Foo* %f, i32 0, i32 0
    // CHECK-NEXT: store i32 47, i32* %2
    f.bar = MAGIC_NUMBER + ANSWER;
    // CHECK-NEXT: %3 = getelementptr inbounds %Foo, %Foo* %f, i32 0, i32 1
    // CHECK-NEXT: store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @{{[0-9]+}}, i32 0, i32 0), i8** %3
    f.baz = "foo";
    // CHECK-NEXT: %4 = call i32 @getBar(%Foo* %f)
    // CHECK-NEXT: store i32 %4, i32* %bar
    let bar = getBar(f);
}
